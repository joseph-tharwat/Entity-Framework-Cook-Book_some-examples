// <auto-generated />
using System;
using EntityFrameworkeCookBook.DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntityFrameworkeCookBook.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250901070631_addAuditableToUser")]
    partial class addAuditableToUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EntityFrameworkeCookBook.DataAccessLayer.Address", b =>
                {
                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<int>("BlockNum")
                        .HasColumnType("int");

                    b.Property<string>("stName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.HasKey("userId");

                    b.ToTable("addresses");
                });

            modelBuilder.Entity("EntityFrameworkeCookBook.DataAccessLayer.Phone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("userid");

                    b.ToTable("phones");
                });

            modelBuilder.Entity("EntityFrameworkeCookBook.DataAccessLayer.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EntityFrameworkeCookBook.DataAccessLayer.Address", b =>
                {
                    b.HasOne("EntityFrameworkeCookBook.DataAccessLayer.User", "user")
                        .WithOne("address")
                        .HasForeignKey("EntityFrameworkeCookBook.DataAccessLayer.Address", "userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("EntityFrameworkeCookBook.DataAccessLayer.Phone", b =>
                {
                    b.HasOne("EntityFrameworkeCookBook.DataAccessLayer.User", "user")
                        .WithMany("phones")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("EntityFrameworkeCookBook.DataAccessLayer.User", b =>
                {
                    b.Navigation("address")
                        .IsRequired();

                    b.Navigation("phones");
                });
#pragma warning restore 612, 618
        }
    }
}
